% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_data.R
\name{get_slga_data}
\alias{get_slga_data}
\title{Get SLGA data}
\usage{
get_slga_data(product = NULL, attribute = NULL, component = "all",
  depth = NULL, aoi = NULL, write_out = TRUE)
}
\arguments{
\item{product}{Character, one of the options from column 'Short_Name' in
\code{\link[slga:slga_product_info]{slga_product_info}}.}

\item{attribute}{Character, one of the options from column 'Code' in
\code{\link[slga:slga_attribute_info]{slga_attribute_info}}.}

\item{component}{Character, one of 'all', 'value', 'ci', 'ci_low', or
'ci_high'. Defaults to 'all'.}

\item{depth}{Integer from 1 to 6. The numbers correspond to the
 following depth ranges:
\enumerate{
 \item 0 to 5 cm.
 \item 5 to 15 cm.
 \item 15 to 30 cm.
 \item 30 to 60 cm.
 \item 60 to 100 cm.
 \item 100 to 200 cm.
 }}

\item{aoi}{Vector of WGS84 coordinates defining a rectangular area of
interest. The vector may be specified directly in the order xmin, ymin,
xmax, ymax, or the function can derive an aoi from the boundary of an `sf`
or `raster` object.}

\item{write_out}{Boolean, whether to write the retrieved dataset to the
working directory as a GeoTiff.}
}
\value{
Raster stack or single raster, depending on the value of `component`.
}
\description{
Downloads SLGA gridded soil and landscape data in raster format from public WCS
services.
}
\note{
Output rasters are restricted to a maximum size of 3x3 decimal degrees.
  Outputs are also aligned to the parent dataset rather than the aoi. Further
  resampling may be required for some applications.
}
\examples{
\dontrun{
# get surface clay data for King Island
aoi <- c(143.75, -40.17, 144.18, -39.57)
ki_surface_clay <- get_slga_data(product = 'TAS', attribute = 'CLY',
                                 component = 'all', depth = 1,
                                 aoi = aoi, write_out = FALSE)

# get estimated clay by depth for King Island
ki_all_clay <- lapply(seq.int(6), function(d) {
get_slga_data(product = 'TAS', attribute = 'CLY',
              component = 'value', depth = d,
              aoi = aoi, write_out = F)
})
ki_all_clay <- raster::brick(ki_all_clay)
}
}
